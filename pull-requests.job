#!/home/mgorny/bin/run-cronjob.sh
# vim:ft=sh

set -e -x
ulimit -t 600 -v 6291456

. "${VIRTUAL_ENV}"/bin/activate

sync=${SYNC_DIR}/gentoo
mirror=${MIRROR_DIR}/gentoo
cache=${REPOS_DIR}/gentoo
gentooci=${GENTOO_CI_GIT}
pull=${PULL_REQUEST_DIR}

cd "${sync}"
git fetch -f "${PULL_REQUEST_REPO}" 'refs/pull/*/head:refs/pull/*'

mkdir -p "${pull}"
no=0
while read hash t ref; do
	prid=${ref#refs/pull/}

	if [[ ! -f ${pull}/${prid} || $(<"${pull}/${prid}") != ${hash} ]]; then
		if [[ ${no} -ne 0 ]]; then
			"${SCRIPT_DIR}"/pending-pull-request.py "${hash}" \
				"QA checks queued. Expected by $(date -u --date="+$(( no*20 + 10 ))min" "+%H:%MZ")"
		fi

		: $(( no++ ))
	fi
done < <(git for-each-ref 'refs/pull/*')

while read hash t ref; do
	prid=${ref#refs/pull/}

	if [[ ! -f ${pull}/${prid} || $(<"${pull}/${prid}") != ${hash} ]]; then
		cd "${pull}"
		echo "${hash}" > "${prid}"
		"${SCRIPT_DIR}"/pending-pull-request.py "${hash}" \
			"QA checks in progress. Results by $(date -u --date="+10min" "+%H:%MZ")"
		rm -rf tmp gentoo-ci

		git clone -s --no-checkout "${mirror}" tmp
		cd tmp
		git fetch "${sync}" "${ref}:${ref}"
		# start on top of last common commit, like fast-forward would do
		git branch "pull-${prid}" "$(git merge-base "${ref}" master)"
		git checkout -q "pull-${prid}"
		# copy existing md5-cache (TODO: try to find previous merge commit)
		rsync -rlpt --delete "${cache}"/metadata/md5-cache metadata

		# update for pre-merge cache
		export PORTAGE_CONFIGROOT="${pull}"
		time pmaint regen --use-local-desc --pkg-desc-index -t 16 gentoo || :
		git add -A -f
		git diff --cached --quiet --exit-code || git commit --quiet -m "Pre-merge cache init"

		# merge the PR on top of cache
		git merge --quiet -m "Merge PR ${prid}" "${ref}"

		# update cache post-merge
		time pmaint regen --use-local-desc --pkg-desc-index -t 16 gentoo || :
		git add -A -f
		git diff --cached --quiet --exit-code || git commit --quiet -m "Post-merge cache update"

		# push to mirror
		(
			git push -f "${mirror}" "pull-${prid}"
			cd "${mirror}"
			git push -f origin "pull-${prid}"
		) &

		cd ..
		git clone -s "${gentooci}" gentoo-ci
		cd gentoo-ci
		git checkout -b "pull-${prid}"
		make -f "${SCRIPT_DIR}"/gentoo-ci.make clean
		time timeout 15m make -f "${SCRIPT_DIR}"/gentoo-ci.make -j16 \
			repo="${pull}/tmp" HOME="${pull}/gentoo-ci"
		ts=$(cd "${pull}"/tmp; git log --pretty='%ct' -1)
		touch -r "${MIRROR_DIR}"/gentoo/metadata/timestamp.chk *.xml
		"${PKGCHECK_RESULT_PARSER_GIT}"/xml2html.py *.xml
		git add *.xml *.html *.css
		git diff --cached --quiet --exit-code || git commit -m "PR ${prid} @ $(date -u --date="@${ts}" "+%Y-%m-%d %H:%M:%S UTC")"
		pr_hash=$(git rev-parse --short HEAD)
		git push -f origin "pull-${prid}"

		cd "${gentooci}"
		git push -f origin "pull-${prid}"

		"${SCRIPT_DIR}"/report-pull-request.py "${prid}" "${pr_hash}" "${pull}"/gentoo-ci/borked.list "${hash}"

		# wait for mirror pushing job
		wait

		break
	fi
done < <(git for-each-ref 'refs/pull/*')
